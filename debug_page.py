import requests
from bs4 import BeautifulSoup
import json

def debug_page():
    """–û—Ç–ª–∞–¥–∫–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã divan.ru"""
    url = "https://www.divan.ru/blagoveshchensk/category/divany"
    headers = {
        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/91.0.4472.124 Safari/537.36'
    }
    
    try:
        print("üîç –ü–æ–ª—É—á–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞...")
        response = requests.get(url, headers=headers, timeout=30)
        response.raise_for_status()
        
        print(f"‚úÖ –°—Ç—Ä–∞–Ω–∏—Ü–∞ –ø–æ–ª—É—á–µ–Ω–∞. –°—Ç–∞—Ç—É—Å: {response.status_code}")
        print(f"üìè –†–∞–∑–º–µ—Ä —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {len(response.text)} —Å–∏–º–≤–æ–ª–æ–≤")
        
        soup = BeautifulSoup(response.text, 'html.parser')
        
        # –ò—â–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã –¥–ª—è —Ç–æ–≤–∞—Ä–æ–≤
        print("\nüîç –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Å—Ç—Ä–∞–Ω–∏—Ü—ã...")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
        print("\nüìã –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å—Ç—Ä–∞–Ω–∏—Ü—ã:")
        
        # –ò—â–µ–º –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
        title = soup.find('title')
        if title:
            print(f"   –ó–∞–≥–æ–ª–æ–≤–æ–∫: {title.get_text().strip()}")
        
        # –ò—â–µ–º –º–µ—Ç–∞-—Ç–µ–≥–∏
        meta_description = soup.find('meta', attrs={'name': 'description'})
        if meta_description:
            print(f"   –û–ø–∏—Å–∞–Ω–∏–µ: {meta_description.get('content', '')}")
        
        # –ò—â–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω—ã–µ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ã —Ç–æ–≤–∞—Ä–æ–≤
        print("\nüîç –ü–æ–∏—Å–∫ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤:")
        
        # –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ —Ç–æ–≤–∞—Ä—ã –ø–æ —Ä–∞–∑–ª–∏—á–Ω—ã–º —Å–µ–ª–µ–∫—Ç–æ—Ä–∞–º
        selectors_to_try = [
            '.product-item',
            '.catalog-item',
            '.item',
            '.product',
            '.divan-item',
            '[data-product]',
            '.catalog__item',
            '.product-card',
            '.item-card'
        ]
        
        for selector in selectors_to_try:
            items = soup.select(selector)
            if items:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(items)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –ø–æ —Å–µ–ª–µ–∫—Ç–æ—Ä—É '{selector}'")
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
                if len(items) > 0:
                    first_item = items[0]
                    print(f"      –ü–µ—Ä–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç: {first_item.name} —Å –∫–ª–∞—Å—Å–∞–º–∏: {first_item.get('class', [])}")
                    # –ò—â–µ–º –Ω–∞–∑–≤–∞–Ω–∏–µ
                    name_elem = first_item.find(['h1', 'h2', 'h3', 'h4', '.name', '.title', '.product-name'])
                    if name_elem:
                        print(f"      –ù–∞–∑–≤–∞–Ω–∏–µ: {name_elem.get_text().strip()[:100]}...")
                    # –ò—â–µ–º —Ü–µ–Ω—É
                    price_elem = first_item.find(['.price', '.cost', '.product-price', '[data-price]'])
                    if price_elem:
                        print(f"      –¶–µ–Ω–∞: {price_elem.get_text().strip()[:50]}...")
            else:
                print(f"   ‚ùå –°–µ–ª–µ–∫—Ç–æ—Ä '{selector}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
        
        # –ò—â–µ–º –ø–æ –∞—Ç—Ä–∏–±—É—Ç–∞–º data-*
        print("\nüîç –ü–æ–∏—Å–∫ –ø–æ data-–∞—Ç—Ä–∏–±—É—Ç–∞–º:")
        data_elements = soup.find_all(attrs={'data-product': True})
        if data_elements:
            print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(data_elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å data-product")
        
        # –ò—â–µ–º –ø–æ –∫–ª–∞—Å—Å–∞–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–µ —Å–ª–æ–≤–∞
        print("\nüîç –ü–æ–∏—Å–∫ –ø–æ –∫–ª–∞—Å—Å–∞–º —Å –∫–ª—é—á–µ–≤—ã–º–∏ —Å–ª–æ–≤–∞–º–∏:")
        keywords = ['product', 'item', 'card', 'divan', 'catalog']
        for keyword in keywords:
            elements = soup.find_all(class_=lambda x: x and keyword in x.lower())
            if elements:
                print(f"   ‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(elements)} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —Å –∫–ª–∞—Å—Å–æ–º, —Å–æ–¥–µ—Ä–∂–∞—â–∏–º '{keyword}'")
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º HTML –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞
        with open('page_debug.html', 'w', encoding='utf-8') as f:
            f.write(response.text)
        print(f"\nüíæ HTML —Å—Ç—Ä–∞–Ω–∏—Ü—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª 'page_debug.html'")
        
        # –ò—â–µ–º —Å–∫—Ä–∏–ø—Ç—ã —Å –¥–∞–Ω–Ω—ã–º–∏
        print("\nüîç –ü–æ–∏—Å–∫ —Å–∫—Ä–∏–ø—Ç–æ–≤ —Å –¥–∞–Ω–Ω—ã–º–∏:")
        scripts = soup.find_all('script')
        for i, script in enumerate(scripts):
            if script.string and ('product' in script.string.lower() or 'catalog' in script.string.lower()):
                print(f"   ‚úÖ –°–∫—Ä–∏–ø—Ç {i+1} —Å–æ–¥–µ—Ä–∂–∏—Ç –¥–∞–Ω–Ω—ã–µ –æ —Ç–æ–≤–∞—Ä–∞—Ö")
                script_content = script.string[:200] + "..." if len(script.string) > 200 else script.string
                print(f"      –°–æ–¥–µ—Ä–∂–∏–º–æ–µ: {script_content}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã: {e}")

if __name__ == "__main__":
    debug_page()
